"""create table email

Revision ID: 8469a8bc32f2
Revises: 
Create Date: 2024-08-29 14:10:45.848902

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '8469a8bc32f2'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('PENDING', 'PROCESS', 'SUCCESS', 'FAILED', name='email_history_status_choices_enum').create(op.get_bind())
    sa.Enum('PENDING', 'PROCESS', 'SUCCESS', 'FAILED', name='email_status_choices_enum').create(op.get_bind())
    op.create_table('emails',
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('email_subject', sa.String(length=100), nullable=False),
    sa.Column('email_content', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('status', postgresql.ENUM('PENDING', 'PROCESS', 'SUCCESS', 'FAILED', name='email_status_choices_enum', create_type=False), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('event_id')
    )
    with op.batch_alter_table('emails', schema=None) as batch_op:
        batch_op.create_index('email_idx_for_email_id', ['event_id'], unique=False, postgresql_using='hash')
        batch_op.create_index('email_idx_for_time_and_status', [sa.text('timestamp ASC'), 'status'], unique=False)

    op.create_table('user_recipients',
    sa.Column('email', sa.String(length=50), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('email_histories',
    sa.Column('status', postgresql.ENUM('PENDING', 'PROCESS', 'SUCCESS', 'FAILED', name='email_history_status_choices_enum', create_type=False), nullable=True),
    sa.Column('email_recipients', sa.Text(), nullable=True),
    sa.Column('err_message', sa.String(length=255), nullable=True),
    sa.Column('email_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['email_id'], ['emails.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('email_histories')
    op.drop_table('user_recipients')
    with op.batch_alter_table('emails', schema=None) as batch_op:
        batch_op.drop_index('email_idx_for_time_and_status')
        batch_op.drop_index('email_idx_for_email_id', postgresql_using='hash')

    op.drop_table('emails')
    sa.Enum('PENDING', 'PROCESS', 'SUCCESS', 'FAILED', name='email_status_choices_enum').drop(op.get_bind())
    sa.Enum('PENDING', 'PROCESS', 'SUCCESS', 'FAILED', name='email_history_status_choices_enum').drop(op.get_bind())
    # ### end Alembic commands ###
